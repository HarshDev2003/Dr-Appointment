<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <style>
      a {
        text-decoration: none;
        color: white;
      }
      .hidden {
        display: none;
      }
      button {
        position: relative;
        padding: 10px 22px;
        border-radius: 6px;
        border: none;
        color: #fff;
        cursor: pointer;
        background-color: #7d2ae8;
        transition: all 0.2s ease;
      }
      button:active {
        transform: scale(0.96);
      }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h1>Admin Dashboard</h1>
        <div class="d-flex justify-content-around my-4">
            <button id="logout" class="btn btn-danger">Logout</button>
            <button id="homepage" class="btn btn-secondary">Homepage</button>
            <button onclick="toggleTable()" class="btn btn-primary">Show/Hide Table</button>
        </div>

        <!-- New Buttons -->
        <div class="d-flex justify-content-around my-4">
            <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addDoctorModal">Add Doctor</button>
            <!-- <button class="btn btn-info" data-bs-toggle="modal" data-bs-target="#viewDoctorModal">View Doctor</button> -->
            <!-- Button to Open Modal -->
<button class="btn btn-info" data-bs-toggle="modal" data-bs-target="#viewDoctorModal" onclick="fetchDoctorData()">View Doctor</button>

<!-- Modal Structure -->
<div class="modal fade" id="viewDoctorModal" tabindex="-1" aria-labelledby="viewDoctorModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="viewDoctorModalLabel">Doctor Information</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <!-- Table to Display Doctor Data -->
        <table class="table table-bordered">
          <thead>
            <tr>
              <th>ID</th>
              <th>Name</th>
              <th>Email</th>
              <th>Specialization</th>
            </tr>
          </thead>
          <tbody id="doctorTableBody">
            <!-- Rows will be populated here by JavaScript -->
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>



            <!-- <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#viewPatientModal">View Patient</button> -->
             <!-- Button to Open Patient Modal -->
<button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#viewPatientModal" onclick="fetchPatientData()">View Patient</button>

<!-- Patient Modal Structure -->
<div class="modal fade" id="viewPatientModal" tabindex="-1" aria-labelledby="viewPatientModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="viewPatientModalLabel">Patient Information</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <!-- Table to Display Patient Data -->
        <table class="table table-bordered">
          <thead>
            <tr>
              <th>ID</th>
              <th>Name</th>
              <th>Age</th>
              <th>Contact</th>
              <th>Condition</th>
            </tr>
          </thead>
          <tbody id="patientTableBody">
            <!-- Rows will be populated here by JavaScript -->
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

        </div>


<!-- Add Doctor Modal -->
<div class="modal fade" id="addDoctorModal" tabindex="-1" aria-labelledby="addDoctorModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addDoctorModalLabel">Add Doctor</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <!-- Form submits data to /add-doctor using POST -->
        <form action="/add-doctor" method="POST">
          <div class="mb-3">
            <label for="doctor_name" class="form-label">Doctor Name</label>
            <input type="text" class="form-control" id="doctor_name" name="doctor_name" required>
          </div>
          <div class="mb-3">
            <label for="email" class="form-label">Doctor Email</label>
            <input type="email" class="form-control" id="email" name="email" required>
          </div>
          <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <input type="password" class="form-control" id="password" name="password" required>
          </div>
          <div class="mb-3">
            <label for="specialization" class="form-label">Specialization</label>
            <input type="text" class="form-control" id="specialization" name="specialization" required>
          </div>
          <button type="submit" class="btn btn-primary">Add Doctor</button>
        </form>
      </div>
    </div>
  </div>
</div>


    <!-- View Patient Modal -->
    <div class="modal fade" id="viewPatientModal" tabindex="-1" aria-labelledby="viewPatientModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="viewPatientModalLabel">View Patient</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <!-- Table or information of patients can be added here -->
            <p>Patient information will be displayed here.</p>
          </div>
        </div>
      </div>
    </div>


      <!-- Toast Container -->
  <div class="toast-container">
    <div id="successToast" class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
      <div class="d-flex">
        <div class="toast-body">
          Doctor added successfully and email sent!
        </div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
    </div>
  </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>

    <script>
      function toggleTable() {
        var tableDiv = document.getElementById("adminTable");
        if (tableDiv.classList.contains("hidden")) {
          tableDiv.classList.remove("hidden");
        } else {
          tableDiv.classList.add("hidden");
        }
      }

      document.getElementById('homepage').addEventListener('click', function() {
          window.location.href = './list';
      });

      document.getElementById('logout').addEventListener('click', function() {
          window.location.href = './logout';
      });





      async function fetchDoctorData() {
  try {
    const response = await fetch('/api/doctors'); // Replace with your API endpoint
    const data = await response.json();

    // Populate table with data
    const tableBody = document.getElementById('doctorTableBody');
    tableBody.innerHTML = ''; // Clear existing content

    data.forEach(doctor => {
      const row = document.createElement('tr');
      row.innerHTML = `
        <td>${doctor.Id}</td>
        <td>${doctor.doctor_name}</td>
        <td>${doctor.email}</td>
        <td>${doctor.specialization}</td>
        <td><button class="btn btn-danger btn-sm" onclick="deleteDoctor(${doctor.Id})">Delete</button></td>
      `;
      tableBody.appendChild(row);
    });
  } catch (error) {
    console.error('Error fetching doctor data:', error);
  }
}

// Delete function
async function deleteDoctor(doctorId) {
  if (confirm('Are you sure you want to delete this doctor?')) {
    try {
      const response = await fetch(`/api/doctors/${doctorId}`, {
        method: 'DELETE',
      });

      if (response.ok) {
        alert('Doctor deleted successfully');
        fetchDoctorData(); // Refresh the table
      } else {
        alert('Failed to delete doctor');
      }
    } catch (error) {
      console.error('Error deleting doctor:', error);
    }
  }
}






async function fetchPatientData() {
  try {
    const response = await fetch('/api/patients'); // Replace with your patient data API endpoint
    const data = await response.json();

    // Populate table with patient data
    const tableBody = document.getElementById('patientTableBody');
    tableBody.innerHTML = ''; // Clear existing content

    data.forEach(patient => {
      const row = document.createElement('tr');
      row.innerHTML = `
        <td>${patient.id}</td>
        <td>${patient.name}</td>
        <td>${patient.age}</td>
        <td>${patient.contact}</td>
        <td>${patient.condition}</td>
      `;
      tableBody.appendChild(row);
    });
  } catch (error) {
    console.error('Error fetching patient data:', error);
  }
}


   // Check URL parameters
   const params = new URLSearchParams(window.location.search);
    if (params.get('status') === 'success') {
      // Show toast notification
      const toastElement = document.getElementById('successToast');
      const toast = new bootstrap.Toast(toastElement, { delay: 5000 }); // 5-second delay
      toast.show();
    }

    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
  
</body>
</html>
